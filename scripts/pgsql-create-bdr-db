#!/bin/bash

pgsql_show_help() {
  echo "This script creates a new BDR enabled database."
  echo ""
  echo "Usage: pgsql_create_bdr_db -d bdr_test -o postgres -nn node1 -ba 127.0.0.1 -bp 5433"
  echo ""
  echo "-d, --database               The database name."
  echo "-o, --owner                  The database owner."
  echo ""
  echo "BDR Options:"
  echo "-nn, --node-name             The local node name."
  echo "-ba, --bdr-address           The address to the remote host."
  echo "-bp, --bdr-port              The port the remote host is listening on."
}

pgsql_create_bdr_db() {
  sudo -u postgres psql -U postgres -d postgres \
       -c "CREATE DATABASE $1 OWNER $2;"
  sudo -u postgres psql -U postgres -d $1 \
       -c "CREATE EXTENSION btree_gist; \
           CREATE EXTENSION bdr;"
  sudo -u postgres psql -U postgres -d $1 \
       -c "SELECT bdr.bdr_group_create( \
           local_node_name := '$3', \
           node_external_dsn := 'host=$4 port=$5 dbname=$1' \
          ); \
          SELECT bdr.bdr_node_join_wait_for_ready();"
}

database=
owner=
node_name=
bdr_address=
bdr_port=
while :; do
  case $1 in
    -\?|--help)
      pgsql_show_help
      exit
      ;;
    -d|--database)
      if [ -n "$2" ]; then
        database="$2"
        shift
      else
        printf 'ERROR: "--database" requires a valid name.\n' >&2
        exit 1
      fi
      ;;
    -o|--owner)
      if [ -n "$2" ]; then
        owner="$2"
        shift
      else
        printf 'ERROR: "--owner" requires a valid name.\n' >&2
        exit 1
      fi
      ;;
    -nn|--node-name)
      if [ -n "$2" ]; then
        node_name="$2"
        shift
      else
        printf 'ERROR: "--node-name" requires a valid name.\n' >&2
        exit 1
      fi
      ;;
    -ba|--bdr-address)
      if [ -n "$2" ]; then
        bdr_address="$2"
        shift
      else
        printf 'ERROR: "--bdr-address" requires a valid address.\n' >&2
        exit 1
      fi
      ;;
    -bp|--bdr-port)
      if [ -n "$2" ]; then
        bdr_port="$2"
        shift
      else
        printf 'ERROR: "--bdr-port" requires a valid port number.\n' >&2
        exit 1
      fi
      ;;
    --)
      shift
      break
      ;;
    -?*)
      printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
      ;;
    *)
      break
  esac
  shift
done

if [ -n "$database" ] && \
   [ -n "$owner" ] && \
   [ -n "$node_name" ] && \
   [ -n "$bdr_address" ] && \
   [ -n "$bdr_port" ]; then
  pgsql_create_bdr_db $database $owner $node_name $bdr_address $bdr_port
else
  pgsql_show_help
fi
